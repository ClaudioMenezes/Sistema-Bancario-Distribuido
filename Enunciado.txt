Trabalho de SD: Sistema Bancário Distribuído (DBS)
- 1ª fase: projeto e implementação do backend do DBS (valor: 20 pts., entrega até dia 13/07)
- 2ª fase: projeto e implementação do frontend e interoperabilidade entre DBS dos grupos (valor: 10 pts., entrega até dia 29/07)

## 1ª fase: backend do DBS
- Cada grupo deverá projetar e desenvolver um Sistema Bancário Distribuído (DBS);
- O DBS de cada grupo consistirá um Banco autônomo, que deverá gerenciar suas Contas e prover operações para movimentações financeiras;

## Princípios:
- O DBS deverá estar distribuído lógica e fisicamente, bem como ser replicado para melhorar a disponibilidade e tolerância a falhas.
- Deverá ser garantida a consistência dos dados e haver armazenamento persistente dos dados bancários;
- Para implementação do DBS, deverá ser utilizado o middleware JGroups (http://jgroups.org), um toolkit para prover multicast confiável que fornece uma flexível pilha de protocolos;
- Dinheiro (virtual) será criado na abertura de uma conta, porém não poderá ser “perdido” dentro do sistema bancário distribuído. 
- DICA: "contabilidade de dupla entrada" -> todo dinheiro que sair tem que entrar em algum lugar, seja numa outra conta do mesmo banco (1ª fase) ou em outra conta de outro banco (2ª fase).

## Requisitos:
- para troca de mensagens, deverá ser utilizado multicast confiável (e/ou unicast, de acordo com o caso);
√ - deverá ser utilizado e configurado protocolo de transporte que não seja o TCP
- OBS.: deverão ser configurados mecanismos para garantir a confiabilidade na entrega das mensagens (retransmissão de mensagens, detecção de duplicatas e integridade);
- deverá ser escolhido e configurado mecanismo de ordenação de mensagens e sincronização;
√ - deverá ser escolhido e configurado mecanismo de controle de fluxo ou limitação de taxa de envio;
- deverá haver um mecanismo de gerenciamento de grupo (GMS);
- deverá ser escolhido e configurado mecanismo de detecção de falhas;
√ - deverá ser escolhido e configurado mecanismo de criptografia;

OBS.: Deverá ser explorada a pilha de protocolos flexível do JGroups, para adaptá-lo às necessidades do DBS. Poderá ser utilizado diretamente RPC onde julgar necessário (ex.: RPCDispatcher provido pelo JGroups ou Java RMI).


## Operações (API):
O DBS deverá permitir que os clientes façam as seguintes operações:
- abertura de conta, identificada por um número e acessada por uma senha;
- consulta do saldo da conta;
- consulta de extrato das movimentações financeiras;
- transferência de dinheiro entre contas do mesmo banco;

## Documentação:
O relatório deverá conter diagramas apropriados ilustrando a arquitetura projetada e justificar as escolhas efetuadas.
- Deverá ser documentada a arquitetura de software, ou seja, a organização lógica dos componentes de software;
- Deverá ser documentada a arquitetura do sistema, ou seja, a realização física dos componentes de software em máquinas reais;
Deverá ser explicado o estilo arquitetônico escolhido, com informações:
- do modo como estão conectados entre si;
- dos dados trocados entre componentes;
- da maneira como são configurados em conjunto;
O código-fonte deverá estar bem documentado, especialmente a API dos programas (sugestão: automatize isso com javadoc /** */);

## ATENÇÃO: preparação para a 2ª fase:
==> cada grupo deverá ter sua implementação distinta do sistema bancário, mas ainda nesta 1ª fase deverão projetar em comum acordo um mecanismo para garantir a interoperabilidade entre bancos para viabilizar aoperação de transferência de dinheiro entre contas de bancos diferentes ("TED"). 